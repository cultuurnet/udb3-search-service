<?xml version="1.0"?>
<ruleset name="">
    <rule ref="PSR2" />

    <rule ref="PSR1.Methods.CamelCapsMethodName.NotCamelCaps">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>
    <rule ref="PSR1.Classes.ClassDeclaration.MultipleClasses">
        <exclude-pattern>*/tests/*</exclude-pattern>
    </rule>

    <rule ref="Symfony2.Arrays.MultiLineArrayComma" />
    <rule ref="Symfony2.Classes.PropertyDeclaration" />
    <rule ref="Symfony2.NamingConventions.ValidClassName" />
    <rule ref="Symfony2.NamingConventions.ValidClassName.InvalidAbstractName">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Symfony2.NamingConventions.ValidClassName.InvalidInterfaceName">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Symfony2.NamingConventions.ValidClassName.InvalidExceptionName">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Symfony2.NamingConventions.ValidClassName.InvalidTraitName">
        <exclude-pattern>*</exclude-pattern>
    </rule>
    <rule ref="Symfony2.Objects.ObjectInstantiation" />
    <rule ref="Symfony2.WhiteSpace.BinaryOperatorSpacing" />

    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>

    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.ControlStructures.ControlSignature"/>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
</ruleset>
